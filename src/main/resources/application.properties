
# General Configurations
server.port=${SERVER_PORT:8080}
spring.application.name=sharing-service
spring.security.user.enabled=false

# Virtual Threads (Java 21+)
spring.threads.virtual.enabled=true

# CORS Configurations
cors.enabled=${CORS_ENABLED:false}
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:Authorization,Content-Type,X-Requested-With}
cors.exposed-headers=${CORS_EXPOSED_HEADERS:}
cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}
cors.max-age=${CORS_MAX_AGE:7200}

# JWT Configurations
security.jwt.token.secret-key=${JWT_SECRET_KEY:fake-jwt-secret-value}
security.jwt.token.expiration-minutes=${JWT_EXPIRATION_MINUTES:120}

# Extra Authentication Header (Additional Security Layer)
# When both name and secret are provided, this adds an extra authentication layer
# that must be satisfied BEFORE JWT validation occurs. This does not replace JWT.
security.extra-auth-header.name=${EXTRA_AUTH_HEADER_NAME:}
security.extra-auth-header.secret=${EXTRA_AUTH_HEADER_SECRET:}

# Python Configurations
python.interpreter.path=${PYTHON_INTERPRETER_PATH:/opt/venv/jupytereverywhere/bin/python}
python.script.path=${PYTHON_SCRIPT_PATH:/app/scripts/validate_notebook.py}

# Database Configurations
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.host=${DB_HOST:sharingservice-db}
spring.datasource.port=${DB_PORT:5432}
spring.datasource.name=${DB_NAME:sharingservice}
spring.datasource.username=${DB_USERNAME:jupytereverywhere}
spring.datasource.password=${DB_PASSWORD:jupytereverywhere}
spring.datasource.url=${DB_URL:jdbc:postgresql://${spring.datasource.host}:${spring.datasource.port}/${spring.datasource.name}}

# JPA Configurations
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.open-in-view=false

# Flyway configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# Object Storage Configurations
storage.type=${STORAGE_TYPE:file}
storage.path.local=${STORAGE_PATH_LOCAL:/var/lib/jupytereverywhere/storage/notebooks}

# AWS S3 and Secrets Manager
aws.s3.region=${AWS_S3_REGION:us-east-1}
aws.s3.bucket=${AWS_S3_BUCKET:}
aws.s3.secret-name=${AWS_S3_SECRET_NAME:}
aws.secrets-manager.service-endpoint=${AWS_SECRETS_MANAGER_SERVICE_ENDPOINT:http://sharingservice-localstack:4566}
aws.secrets-manager.region=${AWS_SECRETS_MANAGER_REGION:us-east-1}

# Notebook Validation
notebook.max-size-bytes=${NOTEBOOK_MAX_SIZE_BYTES:10485760}

# HTTP Request Size Limits (Defense against memory exhaustion)
# Tomcat connector-level limit for all HTTP requests including JSON payloads
# Set slightly above notebook limit to allow for HTTP headers and JSON overhead
server.tomcat.max-http-request-header-size=${MAX_HTTP_REQUEST_HEADER_SIZE:8KB}
server.max-http-request-size=${MAX_HTTP_REQUEST_SIZE:15MB}

# Spring codec in-memory buffering limit (applies to JSON parsing)
spring.codec.max-in-memory-size=${MAX_IN_MEMORY_SIZE:15MB}

# Logging
# logging.level.org.hibernate=DEBUG
# logging.level.org.springframework.orm.jpa=DEBUG
